// Test generated by RoostGPT for test practice-go using AI Type Open AI and AI Model gpt-4

package wordladder

import (
	"testing"
)

func TestDist(t *testing.T) {
	tests := []struct {
		name string
		str1 string
		str2 string
		want bool
	}{
		{
			name: "Both strings are empty",
			str1: "",
			str2: "",
			want: false,
		},
		{
			name: "One string is empty and the other is not",
			str1: "test",
			str2: "",
			want: false,
		},
		{
			name: "Both strings are the same",
			str1: "test",
			str2: "test",
			want: false,
		},
		{
			name: "Both strings have the same length but one character difference",
			str1: "test",
			str2: "tast",
			want: true,
		},
		{
			name: "Both strings have the same length but more than one character difference",
			str1: "test",
			str2: "task",
			want: false,
		},
		{
			name: "Both strings have different lengths",
			str1: "test",
			str2: "testing",
			want: false,
		},
		{
			name: "Strings have special characters and they are the same",
			str1: "@#%&",
			str2: "@#%&",
			want: false,
		},
		{
			name: "Strings have special characters and they are different",
			str1: "@#%&",
			str2: "@#%$",
			want: true,
		},
		{
			name: "Strings are numeric and they are the same",
			str1: "1234",
			str2: "1234",
			want: false,
		},
		{
			name: "Strings are numeric and they are different",
			str1: "1234",
			str2: "1235",
			want: true,
		},
		{
			name: "Strings are alphanumeric and they are the same",
			str1: "test123",
			str2: "test123",
			want: false,
		},
		{
			name: "Strings are alphanumeric and they are different",
			str1: "test123",
			str2: "test124",
			want: true,
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if got := dist(tt.str1, tt.str2); got != tt.want {
				t.Errorf("dist() = %v, want %v", got, tt.want)
			}
		})
	}
}
